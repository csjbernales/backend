###############################################################################
# Set default behavior to automatically normalize line endings.
###############################################################################
* text=auto

###############################################################################
# Set default behavior for command prompt diff.
#
# This is need for earlier builds of msysgit that does not have it on by
# default for csharp files.
# Note: This is only used by command line
###############################################################################
#*.cs     diff=csharp

###############################################################################
# Set the merge driver for project and solution files
#
# Merging from the command prompt will add diff markers to the files if there
# are conflicts (Merging from VS is not affected by the settings below, in VS
# the diff markers are never inserted). Diff markers may cause the following 
# file extensions to fail to load in VS. An alternative would be to treat
# these files as binary and thus will always conflict and require user
# intervention with every merge. To do so, just uncomment the entries below
###############################################################################
#*.sln       merge=binary
#*.csproj    merge=binary
#*.vbproj    merge=binary
#*.vcxproj   merge=binary
#*.vcproj    merge=binary
#*.dbproj    merge=binary
#*.fsproj    merge=binary
#*.lsproj    merge=binary
#*.wixproj   merge=binary
#*.modelproj merge=binary
#*.sqlproj   merge=binary
#*.wwaproj   merge=binary

###############################################################################
# behavior for image files
#
# image files are treated as binary by default.
###############################################################################
#*.jpg   binary
#*.png   binary
#*.gif   binary

###############################################################################
# diff behavior for common document formats
# 
# Convert binary document formats to text before diffing them. This feature
# is only available from the command line. Turn it on by uncommenting the 
# entries below.
###############################################################################
#*.doc   diff=astextplain
#*.DOC   diff=astextplain
#*.docx  diff=astextplain
#*.DOCX  diff=astextplain
#*.dot   diff=astextplain
#*.DOT   diff=astextplain
#*.pdf   diff=astextplain
#*.PDF   diff=astextplain
#*.rtf   diff=astextplain
#*.RTF   diff=astextplain





# let moment = require('moment');

# let lastTokenTime = pm.environment.get('last_token_time');
# let authToken = pm.environment.get('access_token');

# if (!lastTokenTime || moment().diff(moment(lastTokenTime), 'minutes') > 1440) 
# {
#     let url = 'https://dev-48yt3g6lxsb6vr82.eu.auth0.com/oauth/token';
#     let headers = 
#     {
#         'Accept': 'application/json',
#         'Content-Type': 'x-www-form-urlencoded'
#     };
#     let body = 
#     {
#         "client_id": pm.environment.get('client_id'),
#         "client_secret": pm.environment.get('client_secret'),
#         "grant_type": pm.environment.get('grant_type'),
#         "audience": pm.environment.get('audience')
#     };

#     pm.sendRequest({
#         url: url,
#         method: 'POST',
#         header: headers,
#         body: {
#             mode: 'raw',
#             raw: JSON.stringify(body)
#         }
#     }, function (err, res) 
#     {
#         if (err) 
#         {
#             console.log(err);
#         } else 
#         {
#             let responseJson = res.json();
#             if (responseJson.access_token) 
#             {
#                 pm.environment.set('access_token', responseJson.access_token);
#                 pm.environment.set('last_token_time', moment().toISOString());
#             }
#         }
#     });
# }
